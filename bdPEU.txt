-- Tabela TipoUsuario
CREATE TABLE TipoUsuario (
    idTipoUsuario INT PRIMARY KEY AUTO_INCREMENT,
    descricao VARCHAR(100) NOT NULL
);

-- Tabela Usuario
CREATE TABLE Usuario (
    idUsuario INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    senha VARCHAR(100) NOT NULL,
    status ENUM('ativo', 'inativo') NOT NULL,
    foto VARCHAR(255),
    dataCriacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    idTipoUsuario INT,
    FOREIGN KEY (idTipoUsuario) REFERENCES TipoUsuario(idTipoUsuario)
);

CREATE TABLE userTokens (
  id INT AUTO_INCREMENT PRIMARY KEY,
  token VARCHAR(255) NOT NULL,
  idUsuario INT NOT NULL,
  dataCriacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
);

-- Tabela Paciente
CREATE TABLE Paciente (
  idPaciente INT PRIMARY KEY AUTO_INCREMENT,
  idUsuario INT,
  nome VARCHAR(100) NOT NULL,
  dataNascimento DATE NOT NULL,
  genero ENUM('masculino', 'feminino', 'outro') NOT NULL,
  status ENUM('ativo', 'inativo') NOT NULL,
  dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
);

-- Tabela Contato
CREATE TABLE ContatoPaciente (
  idPacienteContato INT PRIMARY KEY AUTO_INCREMENT,
  idPaciente INT,
  tipoContato ENUM('telefone', 'email', 'outro') NOT NULL,
  valorContato VARCHAR(100) NOT NULL,
  FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente)
);

-- Tabela Endereco
CREATE TABLE EnderecoPaciente (
  idEndereco INT PRIMARY KEY AUTO_INCREMENT,
  idPaciente INT,
  endereco VARCHAR(200) NOT NULL,
  cidade VARCHAR(100) NOT NULL,
  estado VARCHAR(100) NOT NULL,
  cep VARCHAR(10) NOT NULL,
  FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente)
);

-- Criação da tabela Patologia
CREATE TABLE Patologia (
  idPatologia INT PRIMARY KEY AUTO_INCREMENT,
  Descricao VARCHAR(255),
  status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

);

-- Criação da tabela Riscos
CREATE TABLE Risco (
  idRisco INT PRIMARY KEY AUTO_INCREMENT,
  Descricao VARCHAR(255),
  status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

);


CREATE TABLE PacientePatologiaRisco (
  idPaciente INT,
  idPatologia INT,
  idRisco INT,
  PRIMARY KEY (idPaciente , idPatologia, idRisco),
  FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
  FOREIGN KEY (idPatologia) REFERENCES Patologia(idPatologia),
  FOREIGN KEY (idRisco) REFERENCES Riscos(idPatologia)
);

-- Tabela Especialidade
CREATE TABLE Especialidade (
idEspecialidade INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela Medico
CREATE TABLE Medico (
idMedico INT PRIMARY KEY AUTO_INCREMENT,
idUsuario INT,
nome VARCHAR(100) NOT NULL,
crm VARCHAR(20) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario),
FOREIGN KEY (especialidade_id) REFERENCES Especialidade(idEspecialidade)
);

-- Tabela MedicoEspecialidade
CREATE TABLE MedicoEspecialidade (
idMedicoEspecialidade INT PRIMARY KEY AUTO_INCREMENT,
idMedico INT,
idEspecialidade INT,
FOREIGN KEY (medico_id) REFERENCES Medico(idMedico),
FOREIGN KEY (especialidade_id) REFERENCES Especialidade(idEspecialidade)
);

-- Tabela Prontuario
CREATE TABLE Prontuario (
idProntuario INT PRIMARY KEY AUTO_INCREMENT,
idPaciente INT,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente)
);

-- Tabela PacienteConvenio
CREATE TABLE PacienteConvenio (
idPacienteConvenio INT PRIMARY KEY AUTO_INCREMENT,
idPaciente INT,
idConvenio INT,
numeroCarteira VARCHAR(50) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
FOREIGN KEY (idConvenio) REFERENCES Convenio(idConvenio)
);

-- Tabela Convenio
CREATE TABLE Convenio (
idConvenio INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela ProntuarioHistoricoSaude
CREATE TABLE ProntuarioHistoricoSaude (
idProntuarioHistoricoSaude INT PRIMARY KEY AUTO_INCREMENT,
idProntuario INT,
dataRegistro DATE NOT NULL,
descricao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idProntuario) REFERENCES Prontuario(idProntuario)
);

-- Tabela ProntuarioQueixaSaude
CREATE TABLE ProntuarioQueixaSaude (
idQueixaSaude INT PRIMARY KEY AUTO_INCREMENT,
idProntuario INT,
dataRegistro DATE NOT NULL,
descricao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idProntuario) REFERENCES Prontuario(idProntuario)
);

-- Tabela ProntuarioHabitoVida
CREATE TABLE ProntuarioHabitoVida (
idHabitoVida INT PRIMARY KEY AUTO_INCREMENT,
idProntuario INT,
dataRegistro DATE NOT NULL,
descricao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idProntuario) REFERENCES Prontuario(idProntuario)
);

-- Tabela ProntuarioExameFisico
CREATE TABLE ProntuarioExameFisico (
idDadoExameFisico INT PRIMARY KEY AUTO_INCREMENT,
idProntuario INT,
dataRegistro DATE NOT NULL,
descricao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idProntuario) REFERENCES Prontuario(idProntuario)
);

-- Tabela Atendimento
CREATE TABLE Atendimento (
idAtendimento INT PRIMARY KEY AUTO_INCREMENT,
idPaciente INT,
idMedico INT,
idProntuario INT,
idClinica INT,
idAgendamentoTipo INT,
idPrograma INT,
dataAtendimento DATE NOT NULL,
horaAtendimento TIME NOT NULL,
conclusao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
FOREIGN KEY (idMedico) REFERENCES Medico(idMedico),
FOREIGN KEY (idProntuario) REFERENCES Prontuario(idProntuario),
FOREIGN KEY (idClinica) REFERENCES Clinicas(idClinica),
FOREIGN KEY (idAgendamentoTipo) REFERENCES TiposAgendamentos(idAgendamentoTipo)
FOREIGN KEY (idPrograma) REFERENCES Programas(idPrograma)
);

-- Tabela Procedimentos
CREATE TABLE Procedimento (
idProcedimento INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela AtendimentoProcedimento
CREATE TABLE AtendimentoProcedimento (
idAtendimentoProcedimento INT PRIMARY KEY AUTO_INCREMENT,
idAtendimento INT,
idProcedimento INT,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idAtendimento) REFERENCES Atendimento(idAtendimento),
FOREIGN KEY (idProcedimento) REFERENCES Procedimentos(idProcedimento)
);

-- Tabela DocumentosMedicos
CREATE TABLE DocumentoMedico (
idDocumentoMedico INT PRIMARY KEY AUTO_INCREMENT,
idAtendimento INT,
idDocumentoTipo INT,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idAtendimento) REFERENCES Atendimento(idAtendimento),
FOREIGN KEY (idDocumentoTipo) REFERENCES DocumentoTipo(idDocumentoTipo)
);

-- Tabela DocumentoTipo
CREATE TABLE DocumentoTipo (
idDocumentoTipo INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela Agendamentos
CREATE TABLE Agendamentos (
idAgendamento INT PRIMARY KEY AUTO_INCREMENT,
idPaciente INT,
idMedico INT,
idClinica INT,
idAgendamentoTipo INT,
dataAgendamento DATE NOT NULL,
horaAgendamento TIME NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
FOREIGN KEY (idMedico) REFERENCES Medico(idMedico),
FOREIGN KEY (idClinica) REFERENCES Clinicas(idClinica),
FOREIGN KEY (idAgendamentoTipo) REFERENCES TiposAgendamentos(idAgendamentoTipo)
);

-- Tabela AgendamentoTipo
CREATE TABLE AgendamentoTipo (
idAgendamentoTipo INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela Clinicas
CREATE TABLE Clinica (
idClinica INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(100) NOT NULL,
endereco VARCHAR(200) NOT NULL,
telefone VARCHAR(20) NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela MedicoClinica
CREATE TABLE MedicoClinica (
idMedicoClinica INT PRIMARY KEY AUTO_INCREMENT,
idMedico INT,
idClinica INT,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idMedico) REFERENCES Medico(idMedico),
FOREIGN KEY (idClinica) REFERENCES Clinicas(idClinica)
);

-- Tabela Solicitacoes
CREATE TABLE solicitacao (
idSolicitacao INT PRIMARY KEY AUTO_INCREMENT,
idPaciente INT,
idMedico INT,
idClinica INT,
dataSolicitacao DATE NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
FOREIGN KEY (idMedico) REFERENCES Medico(idMedico),
FOREIGN KEY (idClinica) REFERENCES Clinicas(idClinica)
);

-- Tabela solicitacaoItem
CREATE TABLE solicitacaoItem (
idItemSolicitacao INT PRIMARY KEY AUTO_INCREMENT,
idSolicitacao INT,
descricao TEXT NOT NULL,
status ENUM('ativo', 'inativo') NOT NULL,
dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (idSolicitacao) REFERENCES Solicitacoes(idSolicitacao)
);

-- Tabela Programa
CREATE TABLE Programa (
  idPrograma INT PRIMARY KEY AUTO_INCREMENT,
  descricao TEXT NOT NULL,
  status ENUM('ativo', 'inativo') NOT NULL,
  dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

-- Tabela ProgramaClinica (relação entre Programa e Clinica)
CREATE TABLE ProgramaClinica (
  idProgramaClinica INT PRIMARY KEY AUTO_INCREMENT,
  idPrograma INT,
  idClinica INT,
  status ENUM('ativo', 'inativo') NOT NULL,
  dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (idPrograma) REFERENCES Programas(idPrograma),
  FOREIGN KEY (idClinica) REFERENCES Clinicas(idClinica)
);

-- Tabela PacientePrograma (relação entre Paciente e Programa)
CREATE TABLE PacientePrograma (
  idPacientePrograma INT PRIMARY KEY AUTO_INCREMENT,
  idPaciente INT,
  idPrograma INT,
  status ENUM('ativo', 'inativo') NOT NULL,
  dataAlteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (idPaciente) REFERENCES Paciente(idPaciente),
  FOREIGN KEY (idPrograma) REFERENCES Programas(idPrograma)
);

CREATE TABLE ProcedimentoPorClassificacao (
  idPrograma INT,
  idPatologia INT,
  idRisco INT,
  idProcedimento INT,
  FOREIGN KEY (idPrograma) REFERENCES Programas(idPrograma),
  FOREIGN KEY (idPatologia) REFERENCES Patologia(ID),
  FOREIGN KEY (idRisco) REFERENCES Riscos(ID),
  FOREIGN KEY (idProcedimento) REFERENCES Procedimentos(idProcedimento),
  PRIMARY KEY (idPrograma, idPatologia, idRisco, idProcedimento)
);
